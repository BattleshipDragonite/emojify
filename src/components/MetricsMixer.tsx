import React, { useState, useRef } from "react";
import MetricChannel from "./MetricChannel";
import AuxChannel from "./AuxChannel";

export const MetricsMixer = ({ currMetrics, setMetrics }) => {

  return (
      <div id="mixer">
        <MetricChannel
          metric="acousticness"
          min={0}
          max={1}
          defaultValue={0}
          step={0.01}
          maxEmoji="🏞️"
          minEmoji="🏙️"
          currMetrics={currMetrics}
          setMetrics={setMetrics}
        />
        <MetricChannel 
          metric="danceability"
          min={0}
          max={1}
          defaultValue={0.5}
          step={0.01}
          maxEmoji="🥳"
          minEmoji="😐"
          currMetrics={currMetrics}
          setMetrics={setMetrics}
        />
        <MetricChannel 
          metric="energy"
          min={0}
          max={1}
          defaultValue={0.6}
          step={0.01}
          maxEmoji="🔋"
          minEmoji="🪫"
          currMetrics={currMetrics}
          setMetrics={setMetrics}
        />
        <MetricChannel 
          metric="instrumentalness"
          min={0}
          max={1}
          defaultValue={0.5}
          step={0.01}
          maxEmoji="🎺"
          minEmoji="🎙️"
          currMetrics={currMetrics}
          setMetrics={setMetrics}
        />
        <MetricChannel 
          metric="liveness"
          min={0}
          max={1}
          defaultValue={0.2}
          step={0.01}
          maxEmoji="🎫"
          minEmoji="🎧"
          currMetrics={currMetrics}
          setMetrics={setMetrics}
        />
        <MetricChannel 
          metric="speechiness"
          min={0}
          max={1}
          defaultValue={0.33}
          step={0.01}
          maxEmoji="🗣️"
          minEmoji="🎶"
          currMetrics={currMetrics}
          setMetrics={setMetrics}
        />
        <MetricChannel 
          metric="valence"
          min={0}
          max={1}
          defaultValue={0.5}
          step={0.01}
          maxEmoji="🥹"
          minEmoji="🥺"
          currMetrics={currMetrics}
          setMetrics={setMetrics}
        />
        <MetricChannel 
          metric="loudness"
          min={-60}
          max={0}
          defaultValue={-25}
          step={1}
          maxEmoji="💥"
          minEmoji="🦗"
          currMetrics={currMetrics}
          setMetrics={setMetrics}
        />
        <MetricChannel 
          metric="tempo"
          min={0}
          max={240}
          defaultValue={120}
          step={1}
          maxEmoji="🚀"
          minEmoji="🐌"
          currMetrics={currMetrics}
          setMetrics={setMetrics}
        />
      </div>
  )
  }

export const AuxMixer = ({ currMetrics, setMetrics }) => {

return (
      <div id="auxiliary">
        <AuxChannel 
          metric="key"
          min={-1}
          max={11}
          defaultValue={0}
          possValues={[
            'n/a',
            'C',
            'C#/D♭',
            'D',
            'D#/E♭',
            'E',
            'F',
            'F#/G♭',
            'G',
            'G#/A♭',
            'A',
            'A#/B♭',
            'B'
          ]}
          currMetrics={currMetrics}
          setMetrics={setMetrics}
        />
        <AuxChannel 
          metric="mode"
          min={0}
          max={1}
          defaultValue={1}
          possValues={['minor', 'major']}
          currMetrics={currMetrics}
          setMetrics={setMetrics}
        />
        <AuxChannel 
          metric="time_signature"
          min={3}
          max={7}
          defaultValue={4}
          possValues={['3/4', '4/4', '5/4', '6/4', '7/4']}
          currMetrics={currMetrics}
          setMetrics={setMetrics}
        />
      </div>
  );
}